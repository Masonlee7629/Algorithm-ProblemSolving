package baekjoon.Silver.Num_1463;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());

        /*
        연산 횟수를 담을 배열 선언
         */
        int[] cnt = new int[N + 1];

        /*
        0, 1번째 인덱스를 0으로 초기화
         */
        cnt[0] = 0;
        cnt[1] = 0;

        /*
        초기화하지 않은 2번부터 반복
        2, 3의 최소공배수 6으로 나누어 떨어지는 경우
        3으로 나누어 떨어지는 경우
        2로 나누어 떨어지는 경우
        그 외 나머지 수
         */
        for(int i = 2; i <= N; i++) {
            if(i % 6 == 0) {
                cnt[i] = Math.min(cnt[i-1], Math.min(cnt[i/2], cnt[i/3])) + 1;
            } else if(i % 3 == 0) {
                cnt[i] = Math.min(cnt[i-1], cnt[i/3]) + 1;
            } else if(i % 2 == 0) {
                cnt[i] = Math.min(cnt[i-1], cnt[i/2]) + 1;
            } else {
                cnt[i] = cnt[i-1] + 1;
            }
        }
        System.out.println(cnt[N]);
    }
}
/*
[연산, N, cnt]
n0 [0]
= 0

n1 [0]
= 0

n2-1 [-1, 1, 1]
n2-2 [/2, 1, 1]
= 1

n3-1 [/3, 1, 1]
n3-2 [-1, 2, 1] -> [-1, 1, 2]
                -> [/2, 1, 2]
= 1

n4-1 [/2, 2, 1] -> [-1, 1, 2]
                -> [/2, 1, 2]
n4-2 [-1, 3, 1] -> [/3, 1, 2]
                -> [-1, 2, 2] -> [-1, 1, 3]
                              -> [/2, 1, 3]
= 2

n5-1 [-1, 4, 1] -> [-1, 3, 2] -> [/3, 1, 3]
                              -> [-1, 2, 3] -> [-1, 1, 4]
                                            -> [/2, 1, 4]
                -> [/2, 2, 2] -> [-1, 1, 3]
                              -> [/2, 1, 3]
= 3

n6-1 [/3, 2, 1] -> [-1, 1, 2]
                -> [/2, 1, 2]
n6-2 [/2, 3, 1] -> [/3, 1, 2]
                -> [-1, 2, 2] -> [-1, 1, 3]
                              -> [/2, 1, 3]
= 2

n7-1 [-1, 6, 1] -> [/3, 2, 2] -> [-1, 1, 3]
                              -> [/2, 1, 3]
                -> [/2, 3, 2] -> [/3, 1, 3]
                              -> [-1, 2, 3] -> [-1, 1, 4]
                                            -> [/2, 1, 4]
= 3

n8-1 [/2, 4, 1] -> [/2, 2, 2] -> [-1, 1, 3]
                              -> [/2, 1, 3]
                -> [-1, 3, 2] -> [/3, 1, 3]
                              -> [-1, 2, 3] -> [-1, 1, 4]
                                            -> [/2, 1, 4]
n8-2 [-1, 7, 1] -> [-1, 6, 2] -> [/3, 2, 3] -> [-1, 1, 4]
                                               [/2, 1, 4]
                              -> [/2, 3, 3] -> [/3, 1, 4]
                                            -> [-1, 2, 4] -> [-1, 1, 5]
                                                          -> [/2, 1, 5]
= 3

n9-1 [/3, 3, 1] -> [/3, 1, 2]
                -> [-1, 2, 2] -> [-1, 1, 3]
                              -> [/2, 1, 3]
n9-2 [-1, 8, 1] -> [/2, 4, 2] -> [-1, 3, 3] -> [/3, 1, 4]
                                            -> [-1, 2, 4] -> [-1, 1, 5]
                                                          -? [/2, 1, 5]
                              -> [/2, 2, 3] -> [-1, 1, 4]
                                            -> [/2, 1, 4]
                -> [-1, 7, 2]
= 2

n10-1 [/2, 5, 1] -> [-1, 4, 2] -> [/2, 2, 3] -> [-1, 1, 4]
                                             -> [/2, 1, 4]
                               -> [-1, 3, 3] -> [/3, 1, 4]
                                             -> [-1, 2, 4] -> [-1, 1, 5]
                                                           -> [/2, 1, 5]
n10-2 [-1, 9, 1] -> [/3, 3, 2] -> [/3, 1, 3]
= 3
*/